# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Test
      run: go test -v ./... -short -coverprofile=test.out -covermode=count -json > report.json

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: -no-fail -fmt=sonarqube -out secreport.json ./...

    - name: Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
          args: >
            -Dsonar.organization=maschineio
            -Dsonar.projectKey=maschineio_core
            -Dsonar.projectName=core
            -Dsonar.projectVersion=v0.0.5
            -Dsonar.sources=.
            -Dsonar.exclusions=**/mocks/**,**/examples/**,**/parser/ksql_base_listener.go,**/parser/ksql_lexer.go,**/parser/ksql_listener.go,**/parser/ksql_parser.go,**/report.json
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/**_test.go
            -Dsonar.go.coverage.reportPaths=test.out
            -Dsonar.go.tests.reportPaths=report.json
            -Dsonar.externalIssuesReportPaths=secreport.json
            -Dsonar.verbose=false
